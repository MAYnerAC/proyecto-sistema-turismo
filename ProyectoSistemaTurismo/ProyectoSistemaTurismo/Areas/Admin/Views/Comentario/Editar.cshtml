@model ProyectoSistemaTurismo.Models.Comentario

@{
    ViewBag.Title = "Editar Comentario";
}

<h2>Editar Comentario</h2>

@using (Html.BeginForm("Editar", "Comentario", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <!-- Campo oculto para ID de comentario -->
    @Html.HiddenFor(model => model.id_comentario)

    <!-- Contenido -->
    <div class="form-group">
        @Html.LabelFor(model => model.contenido, "Contenido", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.contenido, new { @class = "form-control", rows = 4, required = "required", maxlength = 1000 })
            @Html.ValidationMessageFor(model => model.contenido, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Puntuación -->
    <div class="form-group">
        @Html.LabelFor(model => model.puntuacion, "Puntuación", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.puntuacion, new SelectList(new[]
            {
                new { Value = 1, Text = "1 - Muy Malo" },
                new { Value = 2, Text = "2 - Malo" },
                new { Value = 3, Text = "3 - Regular" },
                new { Value = 4, Text = "4 - Bueno" },
                new { Value = 5, Text = "5 - Excelente" }
            }, "Value", "Text"), "Seleccione una puntuación", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.puntuacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Fecha de Comentario (no editable) -->
    <div class="form-group">
        @Html.LabelFor(model => model.fecha_comentario, "Fecha de Comentario", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.fecha_comentario, new { @class = "form-control", @readonly = "readonly" })
        </div>
    </div>


    <!-- Estado (opcional, solo admin puede modificar) -->
    <div class="form-group">
        @Html.LabelFor(model => model.estado, "Estado", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.estado, new SelectList(new[] {
                new { Value = "A", Text = "Activo" },
                new { Value = "I", Text = "Inactivo" }
            }, "Value", "Text"), "Seleccione un estado", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Oferta -->
    <div class="form-group">
        @Html.LabelFor(model => model.id_oferta, "Oferta", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.id_oferta, (SelectList)ViewBag.Ofertas, "Seleccione una oferta", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.id_oferta, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Usuario -->
    <div class="form-group">
        @Html.LabelFor(model => model.id_usuario, "Usuario", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.id_usuario, (SelectList)ViewBag.Usuarios, "Seleccione un usuario", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.id_usuario, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Botones -->
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success">Guardar Cambios</button>
            @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
}
